name: Day4 - Resources API
on:
  push:
    branches: [ master ]
    paths:
      - .github/workflows/day4-scm-resourcesapi.yaml
      - day4/apps/dotnetcore/Scm/**
      - day4/apps/infrastructure/bicep/**
  pull_request:
    branches: [ master ]
    paths:
      - .github/workflows/day4-scm-resourcesapi.yaml
      - day4/apps/dotnetcore/Scm/**
      - day4/apps/infrastructure/bicep/**

env:
  RESOURCE_GROUP_NAME_PREFIX: SCM-DEVD4
  TEMPLATE_NAME: resourcesmain
  ENVIRONMENT_NAME: dev

jobs:
  extract-arm-template:
    if: ${{ github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    env:
      TEMPLATE_PATH: day4/apps/infrastructure/bicep/resources
    steps:
      - uses: actions/checkout@v2
      - name: Transpile bicep files
        run: az bicep build -f ${{ env.TEMPLATE_NAME }}.bicep
        working-directory: ${{ env.TEMPLATE_PATH }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: template
          path: ${{ env.TEMPLATE_PATH }}/${{env.TEMPLATE_NAME }}.json
          if-no-files-found: error
          retention-days: 90

  build-api:
    if: ${{ github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          # SDK Version to use; x will use the latest version of the 3.1 channel
          dotnet-version: '3.1.x'
      - name: dotnet build and publish
        working-directory: day4/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.Api
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o build
      - name: Upload as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: resources-build
          path: day4/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.Api/build
          if-no-files-found: error
          retention-days: 90

  build-resizer:
    if: ${{ github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          # SDK Version to use; x will use the latest version of the 3.1 channel
          dotnet-version: '3.1.x'
      - name: dotnet build and publish
        working-directory: day4/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.ImageResizer
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o build
      - name: Upload as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: resizer-build
          path: day4/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.ImageResizer/build
          if-no-files-found: error
          retention-days: 90

  deploy-arm-template:
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    needs: extract-arm-template
    environment: day4-scm-dev
    outputs:
      resourceApiWebAppName: ${{ steps.arm.outputs.resourceApiWebAppName }}
      imageResizerFunctionName: ${{ steps.arm.outputs.imageResizerFunctionName }}
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Download the arm template
        uses: actions/download-artifact@v2
        with:
          name: template
      - uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Azure Resource Manager (ARM) Template
        id: arm
        uses: Azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME_PREFIX }}-${{ env.GITHUB_REPOSITORY_OWNER_PART }}
          template: ${{env.TEMPLATE_NAME }}.json
          deploymentMode: Incremental
          parameters: > # Lines are joined with spaces
            env=${{ env.ENVIRONMENT_NAME }}

  deploy-api:
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    environment: day4-scm-dev
    needs:
      - build-api
      - deploy-arm-template
    steps:
      - name: Download the build artifact
        uses: actions/download-artifact@v2
        with:
          name: resources-build
      - uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-arm-template.outputs.resourceApiWebAppName }}

  deploy-resizer:
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'azuredevcollege/trainingdays' }}
    runs-on: ubuntu-latest
    environment: day4-scm-dev
    needs:
      - build-resizer
      - deploy-arm-template
    steps:
      - name: Download the build artifact
        uses: actions/download-artifact@v2
        with:
          name: resizer-build
      - uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Azure Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.deploy-arm-template.outputs.imageResizerFunctionName }}
