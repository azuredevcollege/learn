name: day2-scm-common

on:
  push:
    branches:
      - master
    paths:
      - day2/apps/infrastructure/bicep/scm-common.bicep
      - .github/workflows/day2-scm-common.yml
  pull_request:
    branches:
      - master
    paths:
      - day2/apps/infrastructure/bicep/scm-common.bicep
      - .github/workflows/day2-scm-common.yml

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Transpile bicep files
        run: az bicep build -f ./day2/apps/infrastructure/bicep/scm-common.bicep

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: drop
          path: ./day2/apps/infrastructure/bicep/scm-common.json
          retention-days: 30

  deploy-to-dev:
    #if: (github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: day2-scm-dev
    needs: build
    env:
      RESOURCE_GROUP_NAME: rg-scm-devday2
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: devd2

    steps:
      - name: Create Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repository}/deployments
          owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          environment: ${{ env.ENV_NAME }}
          auto_merge: false
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set deployment status in_progress
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment_id}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          deployment_id: ${{ fromJson(steps.create_deployment.output.data).id }}
          environment: ${{ env.ENV_NAME }}
          state: in_progress
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop
      
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup if it does not exist
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
              echo "Azure resource group created"
            fi

      - name: Deploy to dev environment
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./scm-common.json
          parameters: env=${{ env.ENV_NAME }}

      - name: Set deployment status succcess
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment_id}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          deployment_id: ${{ fromJson(steps.create_deployment.output.data).id }}
          environment: ${{ env.ENV_NAME }}
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Set deployment status in_progress
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/{owner}/{repository}/deployments/{deployment_id}/statuses
          owner: ${{ github.repository_owner }}
          repository: ${{ github.repository }}
          deployment_id: ${{ fromJson(steps.create_deployment.output.data).id }}
          environment: ${{ env.ENV_NAME }}
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  deploy-to-test:
    if: (github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: day2-scm-test
    needs: deploy-to-dev
    env:
      RESOURCE_GROUP_NAME: rg-scm-testday2
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: testd2

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop
      
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup if it does not exist
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
              echo "Azure resource group created"
            fi

      - name: Deploy to dev environment
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./scm-common.json
          parameters: env=${{ env.ENV_NAME }}